AWSTemplateFormatVersion: '2010-09-09'
Description: A simple load balanced application
Resources:
  AutoscaleGroup:
    Properties:
      DesiredCapacity: 1
      LaunchConfigurationName: !Ref 'LaunchConfig'
      MaxSize: 3
      MinSize: 1
      VPCZoneIdentifier:
        - subnet-000000
        - subnet-000001
        - subnet-000002
    Type: AWS::AutoScaling::AutoScalingGroup
  CPUHighAlarm:
    Properties:
      AlarmActions:
        - !Ref 'ScaleUpPolicy'
      AlarmDescription: Alarm if CPU > 70%
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: AutoScaleGroup
          Value: !Ref 'AutoscaleGroup'
      EvaluationPeriods: '2'
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: '60'
      Statistic: Average
      Threshold: '70'
    Type: AWS::CloudWatch::Alarm
  CPULowAlarm:
    Properties:
      AlarmActions:
        - !Ref 'ScaleDownPolicy'
      AlarmDescription: Alarm if CPU < 30%
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: AutoScaleGroup
          Value: !Ref 'AutoscaleGroup'
      EvaluationPeriods: '5'
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Period: '60'
      Statistic: Average
      Threshold: '30'
    Type: AWS::CloudWatch::Alarm
  LaunchConfig:
    Properties:
      ImageId: ami-000000
      InstanceType: t3.micro
    Type: AWS::AutoScaling::LaunchConfiguration
  LogsBucket:
    DeletionPolicy: Retain
    Type: AWS::S3::Bucket
  LogsBucketPolicy:
    Properties:
      Bucket: !Ref 'LogsBucket'
      PolicyDocument:
        Statement:
          - Action:
              - s3:PutObject
            Effect: Allow
            Principal:
              AWS: !Ref 'AWS::AccountId'
            Resource: !Join
              - ''
              - - 's3:::'
                - !Ref 'LogsBucket'
                - /alb/*
            Sid: Stmt1429136633762
        Version: '2012-10-17'
    Type: AWS::S3::BucketPolicy
  ScaleDownPolicy:
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref 'AutoscaleGroup'
      Cooldown: '300'
      ScalingAdjustment: '1'
    Type: AWS::AutoScaling::ScalingPolicy
  ScaleUpPolicy:
    Properties:
      AdjustmentType: ChangeInCapacity
      AutoScalingGroupName: !Ref 'AutoscaleGroup'
      Cooldown: '120'
      ScalingAdjustment: '1'
    Type: AWS::AutoScaling::ScalingPolicy
  UnhealthyHosts:
    Properties:
      AlarmDescription: Alarm if Unhealthy Hosts > 1
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: TargetGroup
          Value: !GetAtt 'exampletargetgroup.TargetGroupFullName'
        - Name: LoadBalancer
          Value: !GetAtt 'exampleloadbalancer.LoadBalancerFullName'
      EvaluationPeriods: '2'
      MetricName: UnHealthyHostCount
      Namespace: AWS/ApplicationELB
      Period: '120'
      Statistic: Minimum
      Threshold: '0'
    Type: AWS::CloudWatch::Alarm
  examplelistener:
    Properties:
      Certificates:
        - CertificateArn: arn:::::000000
      DefaultActions:
        - TargetGroupArn: !Ref 'exampletargetgroup'
          Type: forward
      LoadBalancerArn: !Ref 'exampleloadbalancer'
      Port: '443'
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-TLS-1-2-Ext-2018-06
    Type: AWS::ElasticLoadBalancingV2::Listener
  exampleloadbalancer:
    DependsOn: !Ref 'LogsBucketPolicy'
    Properties:
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled
          Value: 'true'
        - Key: access_logs.s3.bucket
          Value: 'true'
        - Key: access_logs.s3.prefix
          Value: alb
      Subnets:
        - subnet-000000
        - subnet-000001
        - subnet-000002
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
  exampletargetgroup:
    Properties:
      Port: '80'
      Protocol: HTTP
      VpcId: vpc-000000
    Type: AWS::ElasticLoadBalancingV2::TargetGroup

